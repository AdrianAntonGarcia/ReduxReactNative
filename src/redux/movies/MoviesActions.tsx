import axios from 'axios';

export interface MovieAction {
  type: string;
  payload?: any;
}

// Generated by https://quicktype.io

export interface MoviesResponse {
  page: number;
  results: Movie[];
  total_pages: number;
  total_results: number;
}

export interface Movie {
  adult: boolean;
  backdrop_path: string;
  genre_ids: number[];
  id: number;
  original_language: OriginalLanguage;
  original_title: string;
  overview: string;
  popularity: number;
  poster_path: string;
  release_date: string;
  title: string;
  video: boolean;
  vote_average: number;
  vote_count: number;
}

export enum OriginalLanguage {
  En = 'en',
  Ja = 'ja',
  Pl = 'pl',
}

export const GET_MOVIES = 'GET_MOVIES';
export const ADD_FAVORITE_ITEM = 'ADD_FAVORITE_ITEM';
export const REMOVE_FAVORITE_ITEM = 'REMOVE_FAVORITE_ITEM';

/**
 * Acciones asíncronas para llamar a servicios
 * @returns Retorna una accón síncrona
 */
export const getMovies = () => {
  const API_URL = 'https://api.themoviedb.org/3/movie/popular';
  const API_KEY = '8a7fd4415553a735edf68497c23ca3f2';
  const PARAMS = 'page=1';
  const BASE_URL = `${API_URL}?api_key=${API_KEY}&${PARAMS}`;
  try {
    console.log('entro');
    return async (dispatch: any) => {
      const res = await axios.get(`${BASE_URL}`);
      if (res.data) {
        dispatch({
          type: GET_MOVIES,
          payload: res.data.results,
        });
      } else {
        console.log('Unable to fetch');
      }
    };
  } catch (error) {
    // Add custom logic to handle errors
  }
};

/**
 * El dispach lo podemos sacar así en vez de tener que usar el useDispach
 * @param movie Película a añadir como favorita
 * @returns
 */
export const addFavorite = (movie: Movie) => (dispatch: any) => {
  dispatch({
    type: ADD_FAVORITE_ITEM,
    payload: movie,
  });
};

export const removeFavorite = (movie: Movie) => (dispatch: any) => {
  dispatch({
    type: REMOVE_FAVORITE_ITEM,
    payload: movie,
  });
};
